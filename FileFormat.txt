Format for the data files for the blender plugin.

General Notes:
    All values should be separated by commas and there should be no 
    space characters anywhere in the file.

Each data file represents one frame of a simulation. Filenames MUST end in
    _#.dat and should contain leading zeros.
    Ex. mydata_000.dat, mydata_001.dat, mydata_002.dat ... mydata_099.dat, mydata_100.dat

Each line will represent one object, and will be of this format:

    Group, Object ID, x_pos, y_pos, z_pos, quat_w, quat_x, quat_y, quat_z,
    object_type, extra_params

Group: An identifier to tell what objects it is related to. When 
applying materials and colors to proxy objects in blender, all members 
of the group will have the same material/color applied to them. The one
exception is the group "individual". Every item in this group will be
visibile in blender and materials will have to be applied to each object
seperately.
    Note: Group names should be completely lowercase. No distinction will
        be made between different cased group names.

Object ID: a unique number that will identify each unique object

x_pos, y_pos, z_pos: x,y,z coorinates of the object

quat_w, quat_x, quat_y, quat_z: orientation of the object using quaternions

object_type: A string representing the type of the object
    ex. "sphere", "cube", "ellipsoid"...
    Note: The object_type should always be completely lowercase.

extra_params: Any other parameters needed to define the shape of the 
	object. The number of these parameters will depend on the value of 
	object_type.
    ex. an object_type of "sphere" would require one extra parameter for 
			the radius 
        an object_type of "cube" would require one extra parameter for 
			the HALF of the side length
        an object_type of "cylinder" requires 2 additional params, 
			the radius, and the half-height.
        an object_type of "cone" requires 2 additional params,
            the radius and the half-height

EXAMPLE: example_0.dat
//////////////////////////////////////////////////////////////////////////////
g1,1,0,0,0,0.707,0,-0.707,0,sphere,1.0
g1,2,5,0,0,0.707,0,-0.707,0,sphere,0.5
g2,3,-5,0,0,0.707,0,0,0.707,cube,0.5
individual,4,-5,0,5,0.707,0,0,0.707,cube,0.5
//////////////////////////////////////////////////////////////////////////////

Data files will typically be much longer than this, but this is a perfectly 
valid data file. The first two objects will be of group "g1" spheres located 
at (0,0,0) and (5,0,0) with a radii of 1.0 (note that these radii MUST be the same)
while a "g2" 
sphere will appear at (-5,0,0) with radius 0.5. Finally, a cube identical to 
the other one will be 5 units above it. This will be the only object visible
in blender because of its group name "individual". The rest will be represented
by proxy objects.


**Supported Object Types** 
    Name:               extra params
    sphere              radius
    cube                half_side_length
    ellipsoid           a,b,c  (semi-principle axis)
    cylinder            radius, half_height
    cone                radius, half_height
    box                 half_xlength, half_ylength, half_zlength
    obj                 filename
    stl                 filename        #Experimental
    ply                 filename        #Experimental
-All supported primitive objects are NOT the same as their renderman counterparts.
    Supported objects have all sides closed so the top and bottom of a
    cylinder will not be open. 

**Importing obj files:**
To import an obj file you only need to put the filename of the obj file as the
    "filename" parameter. The obj file may only be ONE object, if it 
    is composed of multiple "groups" or "objects" it will be turned into one single 
    object in blender. Material files are NOT used for the export to Chrono::Render 
    despite various materials being created in blender. The only one used is 
    "Object #'s material".  

Possible extensions to the file format:
-density, pressure, velocity for simulations that need them could 
	potentially become part of the extra_params if needed
